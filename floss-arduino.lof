\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {2.1}{\ignorespaces Functional block diagram of a microcontroller\relax }}{4}{figure.caption.8}%
\contentsline {figure}{\numberline {2.2}{\ignorespaces ADC resolution\relax }}{6}{figure.caption.9}%
\contentsline {figure}{\numberline {2.3}{\ignorespaces The logo of Open Source Hardware\relax }}{7}{figure.caption.10}%
\contentsline {figure}{\numberline {2.4}{\ignorespaces Arduino Uno Board\relax }}{9}{figure.caption.11}%
\contentsline {figure}{\numberline {2.5}{\ignorespaces Arduino Mega Board\relax }}{10}{figure.caption.13}%
\contentsline {figure}{\numberline {2.6}{\ignorespaces LilyPad Arduino Board\relax }}{11}{figure.caption.14}%
\contentsline {figure}{\numberline {2.7}{\ignorespaces Arduino Phone\relax }}{11}{figure.caption.16}%
\contentsline {figure}{\numberline {2.8}{\ignorespaces 3D printer\relax }}{12}{figure.caption.19}%
\contentsline {figure}{\numberline {2.9}{\ignorespaces PCB image of the shield}}{13}{figure.caption.20}%
\contentsline {figure}{\numberline {2.10}{\ignorespaces Pictorial representation of the schematic of the shield\relax }}{14}{figure.caption.21}%
\contentsline {figure}{\numberline {2.11}{\ignorespaces PCB of the shield\relax }}{15}{figure.caption.22}%
\contentsline {figure}{\numberline {2.12}{\ignorespaces Picture of the shield with all components\relax }}{16}{figure.caption.25}%
\addvspace {10\p@ }
\contentsline {figure}{\numberline {3.1}{\ignorespaces Windows device manager\relax }}{21}{figure.caption.27}%
\contentsline {figure}{\numberline {3.2}{\ignorespaces Windows device manager\relax }}{22}{figure.caption.28}%
\contentsline {figure}{\numberline {3.3}{\ignorespaces Windows update driver option\relax }}{23}{figure.caption.29}%
\contentsline {figure}{\numberline {3.4}{\ignorespaces Linux terminal to launch Arduino IDE\relax }}{24}{figure.caption.30}%
\contentsline {figure}{\numberline {3.5}{\ignorespaces Arduino IDE\relax }}{24}{figure.caption.31}%
\contentsline {figure}{\numberline {3.6}{\ignorespaces Linux terminal to launch Scilab\relax }}{29}{figure.caption.32}%
\contentsline {figure}{\numberline {3.7}{\ignorespaces Browsing toolbox directory\relax }}{30}{figure.caption.33}%
\contentsline {figure}{\numberline {3.8}{\ignorespaces Output of builder.sce\relax }}{31}{figure.caption.34}%
\contentsline {figure}{\numberline {3.9}{\ignorespaces Output of loader.sce\relax }}{32}{figure.caption.35}%
\contentsline {figure}{\numberline {3.10}{\ignorespaces Device Manager in windows\relax }}{33}{figure.caption.36}%
\contentsline {figure}{\numberline {3.11}{\ignorespaces COM port properties window\relax }}{34}{figure.caption.37}%
\contentsline {figure}{\numberline {3.12}{\ignorespaces Port number on Linux terminal\relax }}{34}{figure.caption.38}%
\contentsline {figure}{\numberline {3.13}{\ignorespaces Scilab test code output\relax }}{36}{figure.caption.39}%
\contentsline {figure}{\numberline {3.14}{\ignorespaces Arduino toolbox functions used in this book\relax }}{36}{figure.caption.40}%
\contentsline {figure}{\numberline {3.15}{\ignorespaces Sine generator in palette browser\relax }}{38}{figure.caption.41}%
\contentsline {figure}{\numberline {3.16}{\ignorespaces CSCOPE block in xcos\relax }}{39}{figure.caption.42}%
\contentsline {figure}{\numberline {3.17}{\ignorespaces CLOCK\_c block in xcos\relax }}{39}{figure.caption.43}%
\contentsline {figure}{\numberline {3.18}{\ignorespaces Sine generator in Xcos\relax }}{40}{figure.caption.44}%
\contentsline {figure}{\numberline {3.19}{\ignorespaces Sine generator Xcos output\relax }}{40}{figure.caption.45}%
\contentsline {figure}{\numberline {3.20}{\ignorespaces CSCOPE configuration window\relax }}{41}{figure.caption.46}%
\contentsline {figure}{\numberline {3.21}{\ignorespaces Simulation setup window\relax }}{42}{figure.caption.47}%
\contentsline {figure}{\numberline {3.22}{\ignorespaces Palette browser showing Arduino blocks\relax }}{42}{figure.caption.48}%
\contentsline {figure}{\numberline {3.23}{\ignorespaces Xcos block help\relax }}{43}{figure.caption.49}%
\addvspace {10\p@ }
\contentsline {figure}{\numberline {4.1}{\ignorespaces Light Emitting Diode\relax }}{45}{figure.caption.50}%
\contentsline {figure}{\numberline {4.2}{\ignorespaces Internal connection diagram for the RGB LED on the shield\relax }}{46}{figure.caption.51}%
\contentsline {figure}{\numberline {4.3}{\ignorespaces Connecting Arduino Uno\ and shield\relax }}{46}{figure.caption.52}%
\contentsline {figure}{\numberline {4.4}{\ignorespaces An RGB LED with Arduino Uno\ using a breadboard\relax }}{47}{figure.caption.53}%
\contentsline {figure}{\numberline {4.5}{\ignorespaces LED experiments directly on Arduino Uno\ board, without the shield\relax }}{50}{figure.caption.55}%
\contentsline {figure}{\numberline {4.6}{\ignorespaces Turning the blue LED on through Xcos}}{55}{figure.caption.57}%
\contentsline {figure}{\numberline {4.7}{\ignorespaces Turning the blue LED on through Xcos for two seconds}}{56}{figure.caption.59}%
\contentsline {figure}{\numberline {4.8}{\ignorespaces Turning the blue and red LEDs on through Xcos and turning them off one by one}}{57}{figure.caption.61}%
\contentsline {figure}{\numberline {4.9}{\ignorespaces Blinking the green LED every second through Xcos}}{58}{figure.caption.63}%
\addvspace {10\p@ }
\contentsline {figure}{\numberline {5.1}{\ignorespaces Internal connection diagram for the pushbutton on the shield\relax }}{60}{figure.caption.65}%
\contentsline {figure}{\numberline {5.2}{\ignorespaces A pushbutton to read its status with Arduino Uno using a breadboard\relax }}{60}{figure.caption.66}%
\contentsline {figure}{\numberline {5.3}{\ignorespaces A pushbutton to control an LED with Arduino Uno using a breadboard\relax }}{61}{figure.caption.67}%
\contentsline {figure}{\numberline {5.4}{\ignorespaces GUI in Scilab to show the status of the pushbutton\relax }}{65}{figure.caption.68}%
\contentsline {figure}{\numberline {5.5}{\ignorespaces Printing the push button status on the display block}}{67}{figure.caption.69}%
\contentsline {figure}{\numberline {5.6}{\ignorespaces Turning the LED on or off, depending on the pushbutton}}{68}{figure.caption.71}%
\addvspace {10\p@ }
\contentsline {figure}{\numberline {6.1}{\ignorespaces Light Dependent Resistor\relax }}{70}{figure.caption.73}%
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {Pictorial representation of an LDR}}}{70}{subfigure.1.1}%
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {Symbolic representation of an LDR}}}{70}{subfigure.1.2}%
\contentsline {figure}{\numberline {6.2}{\ignorespaces Internal connection diagram for the LDR on the shield\relax }}{70}{figure.caption.74}%
\contentsline {figure}{\numberline {6.3}{\ignorespaces An LDR to read its values with Arduino Uno\ using a breadboard\relax }}{71}{figure.caption.75}%
\contentsline {figure}{\numberline {6.4}{\ignorespaces An LDR to control an LED with Arduino Uno using a breadboard\relax }}{72}{figure.caption.76}%
\contentsline {figure}{\numberline {6.5}{\ignorespaces Xcos diagram to read LDR values}}{77}{figure.caption.77}%
\contentsline {figure}{\numberline {6.6}{\ignorespaces Plot window in Xcos to read LDR values\relax }}{77}{figure.caption.78}%
\contentsline {figure}{\numberline {6.7}{\ignorespaces Xcos diagram to read the value of the LDR, which is used to turn the blue LED on or off}}{79}{figure.caption.80}%
\contentsline {figure}{\numberline {6.8}{\ignorespaces Plot window in Xcos to read LDR values and the state of LED\relax }}{79}{figure.caption.81}%
\addvspace {10\p@ }
\contentsline {figure}{\numberline {7.1}{\ignorespaces Potentiometer's schematic on the shield\relax }}{82}{figure.caption.83}%
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {Pictorial representation of a potentiometer}}}{82}{subfigure.1.1}%
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {Internal connection diagram for the potentiometer on the shield}}}{82}{subfigure.1.2}%
\contentsline {figure}{\numberline {7.2}{\ignorespaces A potentiometer to control an LED with Arduino Uno using a breadboard\relax }}{83}{figure.caption.84}%
\contentsline {figure}{\numberline {7.3}{\ignorespaces Turning LEDs on through Xcos depending on the potentiometer threshold}}{87}{figure.caption.85}%
\addvspace {10\p@ }
\contentsline {figure}{\numberline {8.1}{\ignorespaces Pictorial and symbolic representation of a thermistor\relax }}{90}{figure.caption.87}%
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {Pictorial representation of a thermistor\cite {therm-wiki}}}}{90}{subfigure.1.1}%
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {Symbolic representation of a thermistor}}}{90}{subfigure.1.2}%
\contentsline {figure}{\numberline {8.2}{\ignorespaces Internal connection diagrams for thermistor and buzzer on the shield\relax }}{90}{figure.caption.88}%
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {Thermistor connection diagram}}}{90}{subfigure.2.1}%
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {Buzzer connection diagram}}}{90}{subfigure.2.2}%
\contentsline {figure}{\numberline {8.3}{\ignorespaces A thermistor to read its values with Arduino Uno using a breadboard\relax }}{91}{figure.caption.89}%
\contentsline {figure}{\numberline {8.4}{\ignorespaces A thermistor to control a buzzer with Arduino Uno using a breadboard\relax }}{92}{figure.caption.90}%
\contentsline {figure}{\numberline {8.5}{\ignorespaces Xcos diagram to read thermistor values}}{100}{figure.caption.93}%
\contentsline {figure}{\numberline {8.6}{\ignorespaces Plot window in Xcos to read thermistor values\relax }}{101}{figure.caption.95}%
\contentsline {figure}{\numberline {8.7}{\ignorespaces Xcos diagram to read the value of thermistor, which is used to turn the buzzer on}}{101}{figure.caption.96}%
\contentsline {figure}{\numberline {8.8}{\ignorespaces Plot window in Xcos to read thermistor values and the state of LED\relax }}{103}{figure.caption.98}%
\addvspace {10\p@ }
\contentsline {figure}{\numberline {9.1}{\ignorespaces Connecting servomotor to the shield attached on Arduino Uno\relax }}{106}{figure.caption.100}%
\contentsline {figure}{\numberline {9.2}{\ignorespaces A servomotor with Arduino Uno\ using a breadboard\relax }}{107}{figure.caption.102}%
\contentsline {figure}{\numberline {9.3}{\ignorespaces A servomotor and a potentiometer with Arduino Uno\ using a breadboard\relax }}{108}{figure.caption.103}%
\contentsline {figure}{\numberline {9.4}{\ignorespaces Rotating the servomotor by a fixed angle}}{115}{figure.caption.104}%
\contentsline {figure}{\numberline {9.5}{\ignorespaces Rotating the servomotor forward and then reverse}}{116}{figure.caption.106}%
\contentsline {figure}{\numberline {9.6}{\ignorespaces Rotating the servomotor in increments of $20^\circ $}}{117}{figure.caption.108}%
\contentsline {figure}{\numberline {9.7}{\ignorespaces Rotating the servomotor as suggested by the potentiometer}}{118}{figure.caption.110}%
\addvspace {10\p@ }
\contentsline {figure}{\numberline {10.1}{\ignorespaces L293D motor driver board\relax }}{122}{figure.caption.112}%
\contentsline {figure}{\numberline {10.2}{\ignorespaces PWM pins on an Arduino Uno\ board\relax }}{123}{figure.caption.114}%
\contentsline {figure}{\numberline {10.3}{\ignorespaces A schematic of DC motor connections\relax }}{124}{figure.caption.115}%
\contentsline {figure}{\numberline {10.4}{\ignorespaces How to connect the DC motor to the Arduino Uno\ board\relax }}{124}{figure.caption.116}%
\contentsline {figure}{\numberline {10.5}{\ignorespaces Control of DC motor for a specified time from Xcos}}{132}{figure.caption.120}%
\contentsline {figure}{\numberline {10.6}{\ignorespaces Xcos control of the DC motor in forward and reverse directions}}{133}{figure.caption.122}%
\contentsline {figure}{\numberline {10.7}{\ignorespaces Xcos control of the DC motor in both directions in a loop}}{134}{figure.caption.124}%
\addvspace {10\p@ }
\contentsline {figure}{\numberline {11.1}{\ignorespaces Block diagram representation of the Protocol\relax }}{138}{figure.caption.126}%
\contentsline {figure}{\numberline {11.2}{\ignorespaces Cycle of query-response between master and slave\relax }}{138}{figure.caption.127}%
\contentsline {figure}{\numberline {11.3}{\ignorespaces Pins in RS485 module\relax }}{139}{figure.caption.129}%
\contentsline {figure}{\numberline {11.4}{\ignorespaces Block diagram for reading the parameters in energy meter\relax }}{144}{figure.caption.136}%
\contentsline {figure}{\numberline {11.5}{\ignorespaces Experimental set up for reading energy meter\relax }}{145}{figure.caption.137}%
\contentsline {figure}{\numberline {11.6}{\ignorespaces Flowchart of Arduino firmware\relax }}{146}{figure.caption.138}%
\contentsline {figure}{\numberline {11.7}{\ignorespaces Flowchart of the steps happening in the FLOSS code\relax }}{148}{figure.caption.139}%
\contentsline {figure}{\numberline {11.8}{\ignorespaces Single phase current output on Scilab Console\relax }}{151}{figure.caption.141}%
\contentsline {figure}{\numberline {11.9}{\ignorespaces Single phase current output in energy meter\relax }}{152}{figure.caption.142}%
\contentsline {figure}{\numberline {11.10}{\ignorespaces Single phase voltage output on Scilab Console\relax }}{152}{figure.caption.143}%
\contentsline {figure}{\numberline {11.11}{\ignorespaces Single phase voltage output in energy meter\relax }}{153}{figure.caption.144}%
\contentsline {figure}{\numberline {11.12}{\ignorespaces Single phase active power output on Scilab Console\relax }}{153}{figure.caption.145}%
\contentsline {figure}{\numberline {11.13}{\ignorespaces Single phase active power output in energy meter\relax }}{154}{figure.caption.146}%
\contentsline {figure}{\numberline {11.14}{\ignorespaces Xcos diagram to read energy meter values}}{154}{figure.caption.147}%
\addvspace {10\p@ }
